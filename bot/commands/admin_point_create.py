import json
import operator
import os

from aiogram import Router
from aiogram.types import Message, CallbackQuery
from aiogram_dialog import Dialog, Window, DialogProtocol, DialogManager
from aiogram_dialog.widgets.input import MessageInput
from aiogram_dialog.widgets.kbd import Cancel, Back, Multiselect, Button
from aiogram_dialog.widgets.text import Const, Format

from app import dp
from commands.state_classes import AdminPointCreate
from core.text import dialogs
from utils.utils import get_city

intro_dialogs = dialogs['intro']
admin_point_create_router = Router(name='admin_point_create')
commands_dir = os.path.dirname(os.path.abspath(__file__))

waste_select = Multiselect(
    Format("‚úì {item[0]}"),
    Format("{item[0]}"),
    id="m_waste_types",
    item_id_getter=operator.itemgetter(1),
    items="waste_types"
)

categories = ['–ë—É–º–∞–≥–∞üìÉ',
              '–ü–ª–∞—Å—Ç–∏–∫üî´',
              '–°—Ç–µ–∫–ª–æüçæ',
              '–ú–µ—Ç–∞–ª–ªüîß',
              '–û–¥–µ–∂–¥–∞üé©',
              '–õ–∞–º–ø–æ—á–∫–∏üí°',
              '–ö—Ä—ã—à–µ—á–∫–∏üî¥',
              '–¢–µ—Ö–Ω–∏–∫–∞üì±',
              '–ë–∞—Ç–∞—Ä–µ–∫–∏ü™´',
              '–®–∏–Ω—ãüõû',
              '–û–ø–∞—Å–Ω–æ–µ‚ò¢',
              '–î—Ä—É–≥–æ–µ']


async def get_data(**kwargs):
    waste_types = [(el, i) for i, el in enumerate(categories)]
    return {
        "waste_types": waste_types,
        "count": len(waste_types),
    }


async def insert_title(message: Message, dialog: DialogProtocol, manager: DialogManager):
    manager.dialog_data['title'] = message.text
    await manager.next()


async def insert_description(message: Message, dialog: DialogProtocol, manager: DialogManager):
    manager.dialog_data['description'] = message.text
    await manager.next()


async def insert_adress(message: Message, dialog: DialogProtocol, manager: DialogManager):
    manager.dialog_data['address'] = message.text
    await manager.next()


async def insert_phone(message: Message, dialog: DialogProtocol, manager: DialogManager):
    manager.dialog_data['phone_number'] = message.text
    await manager.next()


async def insert_cords(message: Message, dialog: DialogProtocol, manager: DialogManager):
    lst = message.text.replace(" ", "").split(',')
    manager.dialog_data["coordinates"] = {}
    manager.dialog_data["coordinates"]['lat'] = float(lst[0])
    manager.dialog_data["coordinates"]['lon'] = float(lst[1])
    await manager.next()


async def insert_waste(message: Message, dialog: DialogProtocol, manager: DialogManager):
    manager.dialog_data["types_of_garbage"] = message.text
    await manager.next()


async def insert_schedule(message: Message, dialog: DialogProtocol, manager: DialogManager):
    manager.dialog_data["schedule"] = message.text
    await manager.next()


async def process_categories(callback: CallbackQuery, button: Button, manager: DialogManager):
    chosen = [categories[int(i)][:-1] for i in waste_select.get_checked(manager)]
    manager.dialog_data['types_of_garbage'] = chosen
    await manager.next()


async def save(callback: CallbackQuery, button: Button, manager: DialogManager):
    with open(os.path.join(commands_dir, 'points.json'), encoding='utf-8') as file:
        points = json.load(file)
    points.append(manager.dialog_data)
    with open(os.path.join(commands_dir, 'points.json'), "w", encoding='utf-8') as file:
        json.dump(points, file, indent=4, ensure_ascii=False)
    await manager.next()


dialog = Dialog(Window(Const("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ—á–∫–∏"), Cancel(Const("–û—Ç–º–µ–Ω–∞‚ùå")), MessageInput(insert_title),
                       state=AdminPointCreate.title),
                Window(Const("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ—á–∫–∏"),
                       Back(Const("–ù–∞–∑–∞–¥‚¨ÖÔ∏è")), Cancel(Const("–û—Ç–º–µ–Ω–∞‚ùå")), MessageInput(insert_description),
                       state=AdminPointCreate.description),
                Window(Const("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–¥—Ä–µ—Å —Ç–æ—á–∫–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ\n–ù–∏–∂–Ω–µ–≤–∞—Ä—Ç–æ–≤—Å–∫, –ú–∞—Ä—à–∞–ª–∞ –ñ—É–∫–æ–≤–∞, 6–ê"),
                       Back(Const("–ù–∞–∑–∞–¥‚¨ÖÔ∏è")), Cancel(Const("–û—Ç–º–µ–Ω–∞‚ùå")),
                       MessageInput(insert_adress), state=AdminPointCreate.address),
                Window(Const("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –º–æ–∂–Ω–æ —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞–º–∏ —Ç–æ—á–∫–∏"),
                       Back(Const("–ù–∞–∑–∞–¥‚¨ÖÔ∏è")), Cancel(Const("–û—Ç–º–µ–Ω–∞‚ùå")),
                       MessageInput(insert_phone), state=AdminPointCreate.phone_number),
                Window(
                    Const(
                        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–µ—Ä–µ—á–µ–Ω—å –≤—Ç–æ—Ä—Å—ã—Ä—å—è, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –≤ –ø—É–Ω–∫—Ç–µ.\n–ö–∞–∫ –æ–±—Ä–∞–∑–µ—Ü –º–æ–∂–µ—Ç–µ –≤–∑—è—Ç—å –ø–µ—Ä–µ—á–µ–Ω—å –ø–æ —Å—Å—ã–ª–∫–µ https://vk.com/@eco4u2-set-ekocentrov-ugra-sobiraet"),
                    Back(Const("–ù–∞–∑–∞–¥‚¨ÖÔ∏è")), Cancel(Const("–û—Ç–º–µ–Ω–∞‚ùå")), MessageInput(insert_waste),
                    state=AdminPointCreate.types_of_garbage
                ),
                Window(
                    Const(
                        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—É–Ω–∫—Ç. –û–Ω–æ –¥–æ–ª–∂–Ω–æ –≤—ã–≥–ª—è–¥–µ—Ç—å –ø—Ä–∏–º–µ—Ä–Ω–æ —Ç–∞–∫:\n–ï–∂–µ–¥–Ω–µ–≤–Ω–æ 10:00 - 20:00\n–û–±–µ–¥ 14:00 - 15:00\n–¢–µ—Ö. –ø–µ—Ä–µ—Ä—ã–≤—ã 11:45 - 12:00 / 16:45 - 17:00"),
                    Back(Const("–ù–∞–∑–∞–¥‚¨ÖÔ∏è")), Cancel(Const("–û—Ç–º–µ–Ω–∞‚ùå")), MessageInput(insert_schedule),
                    state=AdminPointCreate.schedule
                ),
                Window(Const(
                    "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤–∏–¥–∞ <b>55.756265512853076,37.542354827164544</b> (–º–æ–∂–µ—Ç–µ –≤–∑—è—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Å —Å–∞–π—Ç–∞ https://snipp.ru/tools/address-coord"),
                    Back(Const("–ù–∞–∑–∞–¥‚¨ÖÔ∏è")), Cancel(Const("–û—Ç–º–µ–Ω–∞‚ùå")),
                    MessageInput(insert_cords), state=AdminPointCreate.cords),
                Window(Format("""{dialog_data[title]}

{dialog_data[description]}

{dialog_data[address]}
–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {dialog_data[phone_number]}

{dialog_data[schedule]}

–ü—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è:
{dialog_data[types_of_garbage]}"""),
                       Cancel(Const("–û—Ç–º–µ–Ω–∞‚ùå")), Back(Const("–ù–∞–∑–∞–¥‚¨ÖÔ∏è")),
                       Button(Const("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å‚úÖ"), id="approve", on_click=save), state=AdminPointCreate.sure),
                Window(Const('–¢–æ—á–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!'), Cancel(Const("–ú–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")),
                       state=AdminPointCreate.save)
                )

dp.include_router(dialog)
