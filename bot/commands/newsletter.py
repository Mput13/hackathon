import os

from aiogram import Router
from aiogram.enums import ContentType
from aiogram.types import Message, CallbackQuery
from aiogram_dialog import DialogManager, Dialog, Window, DialogProtocol
from aiogram_dialog.api.entities import MediaAttachment, MediaId
from aiogram_dialog.widgets.input import MessageInput
from aiogram_dialog.widgets.kbd import Back, Cancel, Button, Url
from aiogram_dialog.widgets.media import DynamicMedia
from aiogram_dialog.widgets.text import Const, Format
from sqlalchemy import select

from app import dp, bot
from commands.state_classes import CreatingNewsletter, Links
from core.text import dialogs
from models import User
from utils.database import db_async_session_manager

intro_dialogs = dialogs['intro']
newsletter_router = Router(name='newsletter')

commands_dir = os.path.dirname(os.path.abspath(__file__))


async def get_data(**kwargs):
    manager = kwargs['dialog_manager']
    image_id = manager.dialog_data['id']
    image = MediaAttachment(ContentType.PHOTO, file_id=MediaId(image_id))
    return {'photo': image}


async def insert_text(message: Message, dialog: DialogProtocol, manager: DialogManager):
    manager.dialog_data['text'] = message.text
    await manager.next()


async def insert_media(message: Message, dialog: DialogProtocol, manager: DialogManager):
    manager.dialog_data['id'] = message.photo[-1].file_id
    await manager.next()


async def approve_newsletter(callback: CallbackQuery, button: Button, manager: DialogManager):
    async with db_async_session_manager() as session:
        users = await session.execute(select(User))
    for user in users.scalars().all():
        await bot.send_photo(chat_id=user.chat_id, photo=manager.dialog_data['id'], caption=manager.dialog_data['text'])
    await manager.next()


dialog = Dialog(Window(Const('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏'), Cancel(Const("–û—Ç–º–µ–Ω–∞‚ùå")),
                       MessageInput(insert_text), state=CreatingNewsletter.text_insert),
                Window(Const('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ'), Back(Const("–ù–∞–∑–∞–¥‚¨ÖÔ∏è")), Cancel(Const("–û—Ç–º–µ–Ω–∞‚ùå")),
                       MessageInput(insert_media), state=CreatingNewsletter.media_insert),
                Window(Format("{dialog_data[text]}"),
                       DynamicMedia("photo"),
                       Button(Const("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å‚úÖ"), id="approve_newsletter", on_click=approve_newsletter),
                       Back(Const("–ù–∞–∑–∞–¥‚¨ÖÔ∏è")),
                       Cancel(Const("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüè†")), state=CreatingNewsletter.sure, getter=get_data),
                Window(Const("–£—Å–ø–µ—à–Ω–æ!"), Cancel(Const('–í –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')), state=CreatingNewsletter.result))

subdialog = Dialog(
    Window(Const('–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏'), Url(Const("–í–ö–æ–Ω—Ç–∞–∫—Ç–µ"), Const("https://vk.com/eco4u2https://vk.com/eco4u2")),
           Url(Const("–¢–µ–ª–µ–≥—Ä–∞–º"), Const("https://t.me/yugraecology")),
           Url(Const("–û–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∏"), Const("https://ok.ru/group/55933980573950")),
           Url(Const("–°–∞–π—Ç –Æ–≥—Ä–∞ –°–æ–±–∏—Ä–∞–µ—Ç"), Const("https://sobiraet.yugra-ecology.ru/")),
           Cancel(Const("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüè†")), state=Links.links))

dp.include_router(dialog)
dp.include_router(subdialog)
