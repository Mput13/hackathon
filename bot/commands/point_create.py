import operator

from aiogram import Router
from aiogram.types import Message, CallbackQuery
from aiogram_dialog import Dialog, Window, DialogProtocol, DialogManager
from aiogram_dialog.widgets.input import MessageInput
from aiogram_dialog.widgets.kbd import Cancel, Back, Next, Column, Multiselect, Button
from aiogram_dialog.widgets.text import Const, Format

from app import dp
from commands.state_classes import PointCreate
from core.text import dialogs
from repositories.point_repository import point_repository
from schemas.point_request import PointRequest
from utils.database import db_async_session_manager
from utils.utils import get_coordinates_by_address

intro_dialogs = dialogs['intro']
point_create_router = Router(name='point_create')

waste_select = Multiselect(
    Format("‚úì {item[0]}"),
    Format("{item[0]}"),
    id="m_waste_types",
    item_id_getter=operator.itemgetter(1),
    items="waste_types"
)

categories = ['–ë—É–º–∞–≥–∞üìÉ',
              '–ü–ª–∞—Å—Ç–∏–∫üî´',
              '–°—Ç–µ–∫–ª–æüçæ',
              '–ú–µ—Ç–∞–ª–ª‚öôÔ∏è',
              '–û–¥–µ–∂–¥–∞üé©',
              '–õ–∞–º–ø–æ—á–∫–∏üí°',
              '–ö—Ä—ã—à–µ—á–∫–∏üî¥',
              '–¢–µ—Ö–Ω–∏–∫–∞üì±',
              '–ë–∞—Ç–∞—Ä–µ–∫–∏ü™´',
              '–®–∏–Ω—ãüõû',
              '–û–ø–∞—Å–Ω–æ–µ‚ò¢',
              '–î—Ä—É–≥–æ–µ']


async def get_data(**kwargs):
    waste_types = [(el, i) for i, el in enumerate(categories)]
    return {
        "waste_types": waste_types,
        "count": len(waste_types),
    }


async def insert_title(message: Message, dialog: DialogProtocol, manager: DialogManager):
    manager.dialog_data['title'] = message.text
    await manager.next()


async def insert_description(message: Message, dialog: DialogProtocol, manager: DialogManager):
    manager.dialog_data['description'] = message.text
    await manager.next()


async def insert_adress(message: Message, dialog: DialogProtocol, manager: DialogManager):
    manager.dialog_data['address'] = message.text
    await manager.next()


async def insert_phone(message: Message, dialog: DialogProtocol, manager: DialogManager):
    manager.dialog_data['phone_number'] = message.text
    await manager.next()


async def process_categories(callback: CallbackQuery, button: Button, manager: DialogManager):
    chosen = [categories[int(i)][:-1] for i in waste_select.get_checked(manager)]
    manager.dialog_data['types_of_garbage'] = ', '.join(chosen)
    await manager.next()


async def save(callback: CallbackQuery, button: Button, manager: DialogManager):
    manager.dialog_data['author'] = f'@{callback.from_user.username}'
    dct = manager.dialog_data

    async with db_async_session_manager() as session:
        await point_repository.create_point(session, PointRequest(lat=None, lon=None, **dct))
    await manager.next()


dialog = Dialog(Window(Const("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ—á–∫–∏"), Cancel(Const("–û—Ç–º–µ–Ω–∞")), MessageInput(insert_title),
                       state=PointCreate.title),
                Window(Const("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ—á–∫–∏"),
                       Back(Const("–ù–∞–∑–∞–¥")), Cancel(Const("–û—Ç–º–µ–Ω–∞")), MessageInput(insert_description),
                       state=PointCreate.description),
                Window(Const("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–¥—Ä–µ—Å —Ç–æ—á–∫–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ\n–ù–∏–∂–Ω–µ–≤–∞—Ä—Ç–æ–≤—Å–∫, –ú–∞—Ä—à–∞–ª–∞ –ñ—É–∫–æ–≤–∞, 6–ê"),
                       Back(Const("–ù–∞–∑–∞–¥")), Cancel(Const("–û—Ç–º–µ–Ω–∞")),
                       MessageInput(insert_adress), state=PointCreate.address),
                Window(Const("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞  –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –º–æ–∂–Ω–æ —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞–º–∏ —Ç–æ—á–∫–∏"),
                       Back(Const("–ù–∞–∑–∞–¥")), Cancel(Const("–û—Ç–º–µ–Ω–∞")),
                       MessageInput(insert_phone), state=PointCreate.phone_number),
                Window(
                    Const("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥—ã –º—É—Å–æ—Ä–∞ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏"),
                    Button(Const("–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤—ã–±—Ä–∞–Ω—ã‚úîÔ∏è"), id="all_done", on_click=process_categories),
                    Column(waste_select),
                    getter=get_data,
                    state=PointCreate.types_of_garbage
                ),
                Window(Format("""{dialog_data[title]}
        
{dialog_data[description]}

{dialog_data[address]}

–ü—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è: {dialog_data[types_of_garbage]}

–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {dialog_data[phone_number]}"""),
                       Cancel(Const("–û—Ç–º–µ–Ω–∞")), Back(Const("–ù–∞–∑–∞–¥")),
                       Button(Const("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"), id="approve", on_click=save), state=PointCreate.sure),
                Window(Const('–ó–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ—á–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!'), Cancel(Const("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")),
                       state=PointCreate.save)
                )

dp.include_router(dialog)
